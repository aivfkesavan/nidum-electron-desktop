name: "Nidum.ai macOS Build, Notarize, and Publish"
on:
  push:
    branches:
      - main

jobs:
  publish-to-app-store:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.16.0'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and Sign Electron App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          set -e
          set -x

          # Decode and import the Apple certificate
          echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Build the Electron app
          npm run build

          # Code sign the app
          APP_PATH=$(find "$PWD/dist" -name "*.app" -type d | head -n 1)
          codesign --deep --force --verbose --sign "Developer ID Application: $APPLE_TEAM_ID" "$APP_PATH"
          
          # Verify signing
          codesign --verify --deep --strict --verbose=2 "$APP_PATH"

          # Create the DMG
          npm run make

          # Locate the DMG file
          DMG_PATH=$(find "$PWD/dist" -name "*.dmg" -type f | head -n 1)
          echo "DMG_PATH=$DMG_PATH" >> $GITHUB_ENV

      - name: Notarize the DMG
        run: |
          xcrun notarytool submit "$DMG_PATH" --wait \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD" \
            --team-id "$APPLE_TEAM_ID"
          xcrun stapler staple "$DMG_PATH"

      - name: Upload to App Store
        run: |
          # Use iTMSTransporter to upload the DMG to App Store Connect
          xcrun iTMSTransporter -m upload \
            -u "$APPLE_ID" \
            -p "$APPLE_APP_SPECIFIC_PASSWORD" \
            -assetFile "$DMG_PATH" \
            -itc_provider "$APPLE_TEAM_ID" \
            -verbose

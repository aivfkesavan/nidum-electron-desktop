name: Build, Sign, and Notarize Electron App

on:
  push:
    branches:
      - main  # or your desired branch

permissions:
  contents: write

jobs:
  build-sign-notarize:
    runs-on: macos-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'  # Use the version you need

      - name: Install dependencies
        run: npm install

      - name: Build the application
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Use the GitHub token
        run: npm run build

      - name: Find Built App Path
        id: find_app_path
        run: |
          # Find the main .app directory in the "dist" folder
          APP_PATH=$(find "$PWD/dist" -name "*.app" -type d -maxdepth 2 | head -n 1)
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "App path found: $APP_PATH"

      - name: Install Xcode Command Line Tools
        run: sudo xcode-select --install || echo "Command Line Tools already installed"

      - name: Set up keychain and import certificate
        run: |
          # Create a temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

          # Import the certificate
          echo $APPLE_CERTIFICATE | base64 --decode > signing_certificate.p12
          security import signing_certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          
          # Allow codesign to access keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: "12345678"  # Choose a secure temporary keychain password

      - name: Code Sign the Application
        run: |
          codesign --deep --force --verify --verbose --sign "Developer ID Application: Your Name (${APPLE_TEAM_ID})" "$APP_PATH"
        env:
          APP_PATH: ${{ env.APP_PATH }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Notarize the Application
        run: |
          xcrun notarytool submit "$APP_PATH.zip" --apple-id "$APPLE_ID" --team-id "$APPLE_TEAM_ID" --password "$APPLE_APP_SPECIFIC_PASSWORD" --wait
        env:
          APP_PATH: ${{ env.APP_PATH }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

      - name: Staple Notarization Ticket
        run: |
          xcrun stapler staple "$APP_PATH"
        env:
          APP_PATH: ${{ env.APP_PATH }}